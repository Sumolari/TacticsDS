#-------------------------------------------------------------------------------
.SUFFIXES:
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# TARGET is the name of the output
# BUILD is the directory where object files & intermediate files will be placed
# SOURCES is a list of directories containing source code
# INCLUDES is a list of directories containing extra header files
# DOXY is the command to generate documentation
# DOCDIR is the path where documentation will be stored
# DOXYFILE is the file with settings for documentation the generator
#-------------------------------------------------------------------------------
TARGET		:=	$(shell basename "$(CURDIR)")
SOURCES		:=	assets src data
INCLUDES	:=	include build
DOXY        :=  doxygen
DOCDIR      :=  doc
DOXYFILE    :=  $(DOCDIR)/Doxyfile

#-------------------------------------------------------------------------------
# options for code generation
#-------------------------------------------------------------------------------
ARCH	:=

CFLAGS	:=	-g -Wall -O2\
			-std=gnu++0x \
			-DOPENGL \
			$(ARCH)

CFLAGS	+=	$(INCLUDE)
CXXFLAGS	:= $(CFLAGS) -fno-rtti -fexceptions

LDFLAGS_WIN := -L"C:\GL\lib" -lfreeglut -lglut32 -lglaux -lglew32 -lglui32 -lglui32d -lopengl32
LDFLAGS_LNX :=
LDFLAGS_MAC := -framework GLUT -framework OpenGL -framework Cocoa

ASFLAGS	:=	-g $(ARCH)

#-------------------------------------------------------------------------------
# any extra libraries we wish to link with the project
#-------------------------------------------------------------------------------
LIBS	:=

#-------------------------------------------------------------------------------
# list of directories containing libraries, this must be the top level
# containing include and lib
#-------------------------------------------------------------------------------
LIBDIRS_WIN := "C:\GL\include"
LIBDIRS_LNX :=
LIBDIRS_MAC := /usr/local/lib /usr/local/include

#-------------------------------------------------------------------------------

ifeq ($(OS),Windows_NT)
    LDFLAGS := $(LDFLAGS_WIN)
	LIBDIRS := $(LIBDIRS_WIN)
else
	UNAME_S := $(shell uname -s)
    ifeq ($(UNAME_S),Linux)
        LDFLAGS := $(LDFLAGS_LNX)
		LIBDIRS := $(LIBDIRS_LNX)
    endif
    ifeq ($(UNAME_S),Darwin)
        LDFLAGS := $(LDFLAGS_MAC)
		LIBDIRS := $(LIBDIRS_MAC)
		CXXFLAGS += -D__APPLE__
    endif
endif

#-------------------------------------------------------------------------------
# no real need to edit anything past this point unless you need to add
# additional rules for different file extensions
#-------------------------------------------------------------------------------

export OUTPUT	:=	$(CURDIR)/$(TARGET)

CPPFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.cpp)))
PNGFILES    :=  $(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.png)))

#-------------------------------------------------------------------------------
# use CXX for linking C++ projects, CC for standard C
#-------------------------------------------------------------------------------
ifeq ($(strip $(CPPFILES)),)
#-------------------------------------------------------------------------------
	export LD	:=	$(CC)
#-------------------------------------------------------------------------------
else
#-------------------------------------------------------------------------------
	export LD	:=	$(CXX)
#-------------------------------------------------------------------------------
endif
#-------------------------------------------------------------------------------

export OFILES	:=	$(CPPFILES:.cpp=.o)

export INCLUDE	:=	$(foreach dir,$(LIBDIRS),-I$(dir)) \
					$(foreach dir,$(INCLUDES),-I$(dir))

export LIBPATHS	:=	$(foreach dir,$(LIBDIRS),-L$(dir)/lib)

.PHONY: all clean doc build

#-------------------------------------------------------------------------------
all: clean common build

#-------------------------------------------------------------------------------
common:
	rm -rf _assets_
	mkdir _assets_
	$(foreach image,$(PNGFILES),cp assets/$(image) _assets_/$(image);)

#-------------------------------------------------------------------------------
build:
	g++ src/main_opengl.cpp src/FMAW.cpp src/fmaw_*.cpp $(INCLUDE) $(LDFLAGS) $(CXXFLAGS) -o$(TARGET).exe

#-------------------------------------------------------------------------------
clean:
	#@echo clean ...
	@rm -fr $(BUILD) $(TARGET).exe _assets_ $(TARGET).test $(TARGET).exe.dSYM

#-------------------------------------------------------------------------------
doc:
	$(DOXY) $(DOXYFILE)

doc-%:
	$(DOXY) $(DOXYFILE).$*

#-------------------------------------------------------------------------------
test:
	g++ src/tests.cpp -std=gnu++0x -o$(TARGET).test -fexceptions -DTEST
	./$(TARGET).test

#-------------------------------------------------------------------------------
