// Copyright 2015 FMAW

#include "./fmaw_geometry.h"
#include "./fmaw_debug.h"

#include <nds.h>

namespace FMAW {

void Transform::selectRegister() {
    this->PA = OAM + this->id * 16 + 3;
    this->PB = OAM + this->id * 16 + 7;
    this->PC = OAM + this->id * 16 + 11;
    this->PD = OAM + this->id * 16 + 15;
}

uint16 Transform::IDbitMask() {
    return ((this->id & 0x001F)  << 9) | 0xC1FF;
}

void Transform::clear() {
    *this->PA = 0;
    *this->PB = 0;
    *this->PC = 0;
    *this->PD = 0;
}

void Transform::setIdentity() {
    *this->PA = 1 << 8;
    *this->PB = 0;
    *this->PC = 0;
    *this->PD = 1 << 8;
}

void Transform::applyRotation(double angle) {}

void Transform::applyScaling(FixedReal x, FixedReal y) {
    /*
    *this->PA = (((*this->PA) * x) >> 8);
    *this->PB = (((*this->PB) * y) >> 8);
    *this->PC = (((*this->PC) * x) >> 8);
    *this->PD = (((*this->PD) * y) >> 8);
    */
}

void Transform::print() {
    printf("%s\r\n  Transform %u:%s\r\n%f %f\r\n%f %f\r\n%s",
           "\r\n|----------------|", this->id, "\r\n|----------------|",
           *this->PA,
           *this->PB,
           *this->PC,
           *this->PD,
           "|----------------|");
}

}  // namespace FMAW
