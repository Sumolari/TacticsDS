// Copyright 2015 FMAW

#include "./fmaw_sound.h"

#include <nds.h>
#include <maxmod9.h>

#include <map>

#include "./soundbank_bin.h"

namespace FMAW {

namespace Sound {

std::map<int, mm_sound_effect> specialEffects;
bool inited = false;
bool backgroundPlaying = false;

FX effectWithSoundID(int ID) {
    FX effect;
    effect.id = ID;
    effect.rate = (static_cast<int>(1.0f * (1 << 10)));
    effect.handle = 0;
    effect.volume = 255;
    effect.panning = 127;
    return effect;
}

void init() {
    if (!inited) {
        inited = true;
        mmInitDefaultMem((mm_addr)soundbank_bin);
        mmSetModuleTempo(0x4FF);
    }
}

int registerFX(FX fx) {
    init();

    mmLoadEffect(fx.id);

    mm_sound_effect effect = {
        { fx.id },
        fx.rate,
        fx.handle,
        fx.volume,
        fx.panning
    };

    specialEffects[specialEffects.size()] = effect;

    return specialEffects.size() - 1;
}

playID playEffect(int effectID) {
    mm_sound_effect effect = specialEffects[effectID];
    mm_sfxhand reproduction =  mmEffectEx(&effect);
    return -1;
}

bool stopEffect(playID reproductionID) {
    return false;
}

void setBackgroundMusic(int musicID) {
    mmLoad(musicID);
    mmStart(musicID, MM_PLAY_LOOP);
    backgroundPlaying = true;
}

void stopBackgroundMusic() {
    backgroundPlaying = false;
    mmStop();
}

void pauseBackgroundMusic() {
    backgroundPlaying = false;
    mmPause();
}

void resumeBackgroundMusic() {
    backgroundPlaying = true;
    mmResume();
}

void toggleBackgroundMusic() {
    if (backgroundPlaying) {
        pauseBackgroundMusic();
    } else {
        resumeBackgroundMusic();
    }
}

}  // namespace Sound

}  // namespace FMAW
